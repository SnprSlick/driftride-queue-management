<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="DriftRide Custom Rules" Description="Custom code analysis rules for DriftRide projects" ToolsVersion="17.0">

  <!-- Include Microsoft rules as base -->
  <Include Path="MinimumRecommendedRules.ruleset" Action="Default" />

  <!-- Design Rules -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.CodeAnalysis.NetAnalyzers">

    <!-- Design - Error Level -->
    <Rule Id="CA1000" Action="Error" />   <!-- Do not declare static members on generic types -->
    <Rule Id="CA1001" Action="Error" />   <!-- Types that own disposable fields should be disposable -->
    <Rule Id="CA1010" Action="Warning" /> <!-- Collections should implement generic interface -->
    <Rule Id="CA1016" Action="Warning" /> <!-- Mark assemblies with assembly version -->
    <Rule Id="CA1033" Action="Warning" /> <!-- Interface methods should be callable by child types -->
    <Rule Id="CA1049" Action="Error" />   <!-- Types that own native resources should be disposable -->
    <Rule Id="CA1060" Action="Warning" /> <!-- Move pinvokes to native methods class -->
    <Rule Id="CA1061" Action="Warning" /> <!-- Do not hide base class methods -->
    <Rule Id="CA1063" Action="Error" />   <!-- Implement IDisposable Correctly -->
    <Rule Id="CA1065" Action="Error" />   <!-- Do not raise exceptions in unexpected locations -->

    <!-- Globalization Rules -->
    <Rule Id="CA1303" Action="None" />    <!-- Do not pass literals as localized parameters - too restrictive -->
    <Rule Id="CA1304" Action="Warning" /> <!-- Specify CultureInfo -->
    <Rule Id="CA1305" Action="Warning" /> <!-- Specify IFormatProvider -->
    <Rule Id="CA1307" Action="Warning" /> <!-- Specify StringComparison -->
    <Rule Id="CA1308" Action="Warning" /> <!-- Normalize strings to uppercase -->
    <Rule Id="CA1309" Action="Warning" /> <!-- Use ordinal StringComparison -->

    <!-- Interoperability Rules -->
    <Rule Id="CA1401" Action="Warning" /> <!-- P/Invokes should not be visible -->
    <Rule Id="CA1415" Action="Warning" /> <!-- Declare P/Invokes correctly -->

    <!-- Maintainability Rules -->
    <Rule Id="CA1501" Action="Warning" /> <!-- Avoid excessive inheritance -->
    <Rule Id="CA1502" Action="Warning" /> <!-- Avoid excessive complexity -->
    <Rule Id="CA1505" Action="Warning" /> <!-- Avoid unmaintainable code -->
    <Rule Id="CA1506" Action="Warning" /> <!-- Avoid excessive class coupling -->
    <Rule Id="CA1507" Action="Warning" /> <!-- Use nameof to express symbol names -->
    <Rule Id="CA1508" Action="Warning" /> <!-- Avoid dead conditional code -->
    <Rule Id="CA1509" Action="None" />    <!-- Invalid entry in code metrics rule specification file -->

    <!-- Naming Rules -->
    <Rule Id="CA1700" Action="Warning" /> <!-- Do not name enum values 'Reserved' -->
    <Rule Id="CA1707" Action="None" />    <!-- Identifiers should not contain underscores - conflicts with private fields -->
    <Rule Id="CA1708" Action="Warning" /> <!-- Identifiers should differ by more than case -->
    <Rule Id="CA1710" Action="Warning" /> <!-- Identifiers should have correct suffix -->
    <Rule Id="CA1711" Action="Warning" /> <!-- Identifiers should not have incorrect suffix -->
    <Rule Id="CA1712" Action="Warning" /> <!-- Do not prefix enum values with type name -->
    <Rule Id="CA1713" Action="Warning" /> <!-- Events should not have 'Before' or 'After' prefix -->
    <Rule Id="CA1714" Action="Warning" /> <!-- Flags enums should have plural names -->
    <Rule Id="CA1715" Action="Warning" /> <!-- Identifiers should have correct prefix -->
    <Rule Id="CA1716" Action="Warning" /> <!-- Identifiers should not match keywords -->
    <Rule Id="CA1717" Action="Warning" /> <!-- Only FlagsAttribute enums should have plural names -->
    <Rule Id="CA1720" Action="Warning" /> <!-- Identifier contains type name -->
    <Rule Id="CA1721" Action="Warning" /> <!-- Property names should not match get methods -->
    <Rule Id="CA1724" Action="Warning" /> <!-- Type names should not match namespaces -->
    <Rule Id="CA1725" Action="Warning" /> <!-- Parameter names should match base declaration -->

    <!-- Performance Rules -->
    <Rule Id="CA1800" Action="Warning" /> <!-- Do not cast unnecessarily -->
    <Rule Id="CA1801" Action="Warning" /> <!-- Review unused parameters -->
    <Rule Id="CA1802" Action="Warning" /> <!-- Use literals where appropriate -->
    <Rule Id="CA1805" Action="Warning" /> <!-- Do not initialize unnecessarily -->
    <Rule Id="CA1806" Action="Warning" /> <!-- Do not ignore method results -->
    <Rule Id="CA1810" Action="Warning" /> <!-- Initialize reference type static fields inline -->
    <Rule Id="CA1812" Action="None" />    <!-- Avoid uninstantiated internal classes - many false positives -->
    <Rule Id="CA1813" Action="Warning" /> <!-- Avoid unsealed attributes -->
    <Rule Id="CA1814" Action="Warning" /> <!-- Prefer jagged arrays over multidimensional -->
    <Rule Id="CA1815" Action="Warning" /> <!-- Override equals and operator equals on value types -->
    <Rule Id="CA1819" Action="Warning" /> <!-- Properties should not return arrays -->
    <Rule Id="CA1820" Action="Warning" /> <!-- Test for empty strings using string length -->
    <Rule Id="CA1821" Action="Warning" /> <!-- Remove empty Finalizers -->
    <Rule Id="CA1822" Action="Warning" /> <!-- Mark members as static -->
    <Rule Id="CA1823" Action="Warning" /> <!-- Avoid unused private fields -->
    <Rule Id="CA1824" Action="Warning" /> <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
    <Rule Id="CA1825" Action="Warning" /> <!-- Avoid zero-length array allocations -->

    <!-- Reliability Rules -->
    <Rule Id="CA2000" Action="Warning" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA2001" Action="Warning" /> <!-- Avoid calling problematic methods -->
    <Rule Id="CA2002" Action="Warning" /> <!-- Do not lock on objects with weak identity -->
    <Rule Id="CA2003" Action="Warning" /> <!-- Do not treat fibers as threads -->
    <Rule Id="CA2004" Action="Warning" /> <!-- Remove calls to GC.KeepAlive -->
    <Rule Id="CA2006" Action="Warning" /> <!-- Use SafeHandle to encapsulate native resources -->

    <!-- Security Rules -->
    <Rule Id="CA2100" Action="Warning" /> <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2101" Action="Warning" /> <!-- Specify marshaling for P/Invoke string arguments -->
    <Rule Id="CA2108" Action="Warning" /> <!-- Review declarative security on value types -->
    <Rule Id="CA2111" Action="Warning" /> <!-- Pointers should not be visible -->
    <Rule Id="CA2112" Action="Warning" /> <!-- Secured types should not expose fields -->
    <Rule Id="CA2114" Action="Warning" /> <!-- Method security should be a superset of type -->
    <Rule Id="CA2116" Action="Warning" /> <!-- APTCA methods should only call APTCA methods -->
    <Rule Id="CA2117" Action="Warning" /> <!-- APTCA types should only extend APTCA base types -->
    <Rule Id="CA2122" Action="Warning" /> <!-- Do not indirectly expose methods with link demands -->
    <Rule Id="CA2123" Action="Warning" /> <!-- Override link demands should be identical to base -->
    <Rule Id="CA2124" Action="Warning" /> <!-- Wrap vulnerable finally clauses in outer try -->
    <Rule Id="CA2126" Action="Warning" /> <!-- Type link demands require inheritance demands -->

    <!-- Usage Rules -->
    <Rule Id="CA2200" Action="Error" />   <!-- Rethrow to preserve stack details -->
    <Rule Id="CA2201" Action="Warning" /> <!-- Do not raise reserved exception types -->
    <Rule Id="CA2202" Action="Warning" /> <!-- Do not dispose objects multiple times -->
    <Rule Id="CA2204" Action="None" />    <!-- Literals should be spelled correctly - too many false positives -->
    <Rule Id="CA2205" Action="Warning" /> <!-- Use managed equivalents of win32 api -->
    <Rule Id="CA2207" Action="Warning" /> <!-- Initialize value type static fields inline -->
    <Rule Id="CA2208" Action="Warning" /> <!-- Instantiate argument exceptions correctly -->
    <Rule Id="CA2210" Action="Warning" /> <!-- Assemblies should have valid strong names -->
    <Rule Id="CA2211" Action="Warning" /> <!-- Non-constant fields should not be visible -->
    <Rule Id="CA2212" Action="Warning" /> <!-- Do not mark serviced components with WebMethod -->
    <Rule Id="CA2213" Action="Warning" /> <!-- Disposable fields should be disposed -->
    <Rule Id="CA2214" Action="Warning" /> <!-- Do not call overridable methods in constructors -->
    <Rule Id="CA2215" Action="Warning" /> <!-- Dispose methods should call base class dispose -->
    <Rule Id="CA2216" Action="Warning" /> <!-- Disposable types should declare finalizer -->
    <Rule Id="CA2217" Action="Warning" /> <!-- Do not mark enums with FlagsAttribute -->
    <Rule Id="CA2218" Action="Warning" /> <!-- Override GetHashCode on overriding Equals -->
    <Rule Id="CA2219" Action="Warning" /> <!-- Do not raise exceptions in exception clauses -->
    <Rule Id="CA2220" Action="Warning" /> <!-- Finalizers should call base class finalizer -->
    <Rule Id="CA2221" Action="Warning" /> <!-- Finalizers should be protected -->
    <Rule Id="CA2222" Action="Warning" /> <!-- Do not decrease inherited member visibility -->
    <Rule Id="CA2223" Action="Warning" /> <!-- Members should differ by more than return type -->
    <Rule Id="CA2224" Action="Warning" /> <!-- Override Equals on overloading operator equals -->
    <Rule Id="CA2225" Action="Warning" /> <!-- Operator overloads have named alternates -->
    <Rule Id="CA2226" Action="Warning" /> <!-- Operators should have symmetrical overloads -->
    <Rule Id="CA2227" Action="Warning" /> <!-- Collection properties should be read only -->
    <Rule Id="CA2228" Action="Warning" /> <!-- Do not ship unreleased resource formats -->
    <Rule Id="CA2229" Action="Warning" /> <!-- Implement serialization constructors -->
    <Rule Id="CA2230" Action="Warning" /> <!-- Use params for variable arguments -->
    <Rule Id="CA2231" Action="Warning" /> <!-- Overload operator equals on overriding value type Equals -->
    <Rule Id="CA2232" Action="Warning" /> <!-- Mark Windows Forms entry points with STAThread -->
    <Rule Id="CA2233" Action="Warning" /> <!-- Operations should not overflow -->
    <Rule Id="CA2234" Action="Warning" /> <!-- Pass system uri objects instead of strings -->
    <Rule Id="CA2235" Action="Warning" /> <!-- Mark all non-serializable fields -->
    <Rule Id="CA2236" Action="Warning" /> <!-- Call base class methods on ISerializable types -->
    <Rule Id="CA2237" Action="Warning" /> <!-- Mark ISerializable types with serializable -->
    <Rule Id="CA2238" Action="Warning" /> <!-- Implement serialization methods correctly -->
    <Rule Id="CA2239" Action="Warning" /> <!-- Provide deserialization methods for optional fields -->
    <Rule Id="CA2240" Action="Warning" /> <!-- Implement ISerializable correctly -->
    <Rule Id="CA2241" Action="Warning" /> <!-- Provide correct arguments to formatting methods -->
    <Rule Id="CA2242" Action="Warning" /> <!-- Test for NaN correctly -->
    <Rule Id="CA2243" Action="Warning" /> <!-- Attribute string literals should parse correctly -->

  </Rules>

  <!-- StyleCop Analyzers -->
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">

    <!-- Special Rules -->
    <Rule Id="SA0001" Action="None" />    <!-- XML comment analysis disabled -->
    <Rule Id="SA0002" Action="None" />    <!-- Invalid settings file -->

    <!-- Spacing Rules -->
    <Rule Id="SA1000" Action="Warning" /> <!-- Keywords should be spaced correctly -->
    <Rule Id="SA1001" Action="Warning" /> <!-- Commas should be spaced correctly -->
    <Rule Id="SA1002" Action="Warning" /> <!-- Semicolons should be spaced correctly -->
    <Rule Id="SA1003" Action="Warning" /> <!-- Symbols should be spaced correctly -->
    <Rule Id="SA1004" Action="Warning" /> <!-- Documentation lines should begin with single space -->
    <Rule Id="SA1005" Action="Warning" /> <!-- Single line comments should begin with single space -->
    <Rule Id="SA1006" Action="Warning" /> <!-- Preprocessor keywords should not be preceded by space -->
    <Rule Id="SA1007" Action="Warning" /> <!-- Operator keyword should be followed by space -->
    <Rule Id="SA1008" Action="Warning" /> <!-- Opening parenthesis should be spaced correctly -->
    <Rule Id="SA1009" Action="Warning" /> <!-- Closing parenthesis should be spaced correctly -->
    <Rule Id="SA1010" Action="Warning" /> <!-- Opening square brackets should be spaced correctly -->
    <Rule Id="SA1011" Action="Warning" /> <!-- Closing square brackets should be spaced correctly -->
    <Rule Id="SA1012" Action="Warning" /> <!-- Opening braces should be spaced correctly -->
    <Rule Id="SA1013" Action="Warning" /> <!-- Closing braces should be spaced correctly -->
    <Rule Id="SA1014" Action="Warning" /> <!-- Opening generic brackets should be spaced correctly -->
    <Rule Id="SA1015" Action="Warning" /> <!-- Closing generic brackets should be spaced correctly -->
    <Rule Id="SA1016" Action="Warning" /> <!-- Opening attribute brackets should be spaced correctly -->
    <Rule Id="SA1017" Action="Warning" /> <!-- Closing attribute brackets should be spaced correctly -->
    <Rule Id="SA1018" Action="Warning" /> <!-- Nullable type symbols should be spaced correctly -->
    <Rule Id="SA1019" Action="Warning" /> <!-- Member access symbols should be spaced correctly -->
    <Rule Id="SA1020" Action="Warning" /> <!-- Increment decrement symbols should be spaced correctly -->
    <Rule Id="SA1021" Action="Warning" /> <!-- Negative signs should be spaced correctly -->
    <Rule Id="SA1022" Action="Warning" /> <!-- Positive signs should be spaced correctly -->
    <Rule Id="SA1023" Action="Warning" /> <!-- Dereference and access of symbols should be spaced correctly -->
    <Rule Id="SA1024" Action="Warning" /> <!-- Colons should be spaced correctly -->
    <Rule Id="SA1025" Action="Warning" /> <!-- Code should not contain multiple whitespace in a row -->
    <Rule Id="SA1026" Action="Warning" /> <!-- Code should not contain space after new or stackalloc keyword in implicitly typed array allocation -->
    <Rule Id="SA1027" Action="Warning" /> <!-- Use tabs correctly -->
    <Rule Id="SA1028" Action="Warning" /> <!-- Code should not contain trailing whitespace -->

    <!-- Readability Rules -->
    <Rule Id="SA1100" Action="Warning" /> <!-- Do not prefix calls with base unless local implementation exists -->
    <Rule Id="SA1101" Action="None" />    <!-- Prefix local calls with this - disabled, conflicts with modern C# style -->
    <Rule Id="SA1102" Action="Warning" /> <!-- Query clause should follow previous clause -->
    <Rule Id="SA1103" Action="Warning" /> <!-- Query clauses should be on separate lines or all on one line -->
    <Rule Id="SA1104" Action="Warning" /> <!-- Query clause should begin on new line when previous clause spans multiple lines -->
    <Rule Id="SA1105" Action="Warning" /> <!-- Query clauses spanning multiple lines should begin on own line -->
    <Rule Id="SA1106" Action="Warning" /> <!-- Code should not contain empty statements -->
    <Rule Id="SA1107" Action="Warning" /> <!-- Code should not contain multiple statements on one line -->
    <Rule Id="SA1108" Action="Warning" /> <!-- Block statements should not contain embedded comments -->
    <Rule Id="SA1109" Action="None" />    <!-- Block statements should not contain embedded regions -->
    <Rule Id="SA1110" Action="Warning" /> <!-- Opening parenthesis or bracket should be on declaration line -->
    <Rule Id="SA1111" Action="Warning" /> <!-- Closing parenthesis should be on line of last parameter -->
    <Rule Id="SA1112" Action="Warning" /> <!-- Closing parenthesis should be on line of opening parenthesis -->
    <Rule Id="SA1113" Action="Warning" /> <!-- Comma should be on the same line as previous parameter -->
    <Rule Id="SA1114" Action="Warning" /> <!-- Parameter list should follow declaration -->
    <Rule Id="SA1115" Action="Warning" /> <!-- Parameter should follow comma -->
    <Rule Id="SA1116" Action="Warning" /> <!-- Split parameters should start on line after declaration -->
    <Rule Id="SA1117" Action="Warning" /> <!-- Parameters should be on same line or separate lines -->
    <Rule Id="SA1118" Action="Warning" /> <!-- Parameter should not span multiple lines -->
    <Rule Id="SA1119" Action="Warning" /> <!-- Statement should not use unnecessary parenthesis -->
    <Rule Id="SA1120" Action="Warning" /> <!-- Comments should contain text -->
    <Rule Id="SA1121" Action="Warning" /> <!-- Use built-in type alias -->
    <Rule Id="SA1122" Action="Warning" /> <!-- Use string.Empty for empty strings -->
    <Rule Id="SA1123" Action="Warning" /> <!-- Do not place regions within elements -->
    <Rule Id="SA1124" Action="Warning" /> <!-- Do not use regions -->
    <Rule Id="SA1125" Action="Warning" /> <!-- Use shorthand for nullable types -->
    <Rule Id="SA1126" Action="None" />    <!-- Prefix calls correctly - conflicts with SA1101 -->
    <Rule Id="SA1127" Action="Warning" /> <!-- Generic type constraints should be on their own line -->
    <Rule Id="SA1128" Action="Warning" /> <!-- Put constructor initializers on their own line -->
    <Rule Id="SA1129" Action="Warning" /> <!-- Do not use default value type constructor -->
    <Rule Id="SA1130" Action="Warning" /> <!-- Use lambda syntax -->
    <Rule Id="SA1131" Action="Warning" /> <!-- Use readable conditions -->
    <Rule Id="SA1132" Action="Warning" /> <!-- Do not combine fields -->
    <Rule Id="SA1133" Action="Warning" /> <!-- Do not combine attributes -->
    <Rule Id="SA1134" Action="Warning" /> <!-- Attributes should not share line -->
    <Rule Id="SA1135" Action="Warning" /> <!-- Enum values should be on separate lines -->
    <Rule Id="SA1136" Action="Warning" /> <!-- Enum values should be on separate lines -->
    <Rule Id="SA1137" Action="Warning" /> <!-- Elements should have the same indentation -->
    <Rule Id="SA1139" Action="Warning" /> <!-- Use literal suffix notation instead of casting -->

    <!-- Ordering Rules -->
    <Rule Id="SA1200" Action="None" />    <!-- Using directives should be placed correctly - handled by IDE -->
    <Rule Id="SA1201" Action="Warning" /> <!-- Elements should appear in the correct order -->
    <Rule Id="SA1202" Action="Warning" /> <!-- Elements should be ordered by access -->
    <Rule Id="SA1203" Action="Warning" /> <!-- Constants should appear before fields -->
    <Rule Id="SA1204" Action="Warning" /> <!-- Static elements should appear before instance elements -->
    <Rule Id="SA1205" Action="Warning" /> <!-- Partial elements should declare access -->
    <Rule Id="SA1206" Action="Warning" /> <!-- Declaration keywords should follow order -->
    <Rule Id="SA1207" Action="Warning" /> <!-- Protected should come before internal -->
    <Rule Id="SA1208" Action="Warning" /> <!-- System using directives should be placed before other using directives -->
    <Rule Id="SA1209" Action="Warning" /> <!-- Using alias directives should be placed after other using directives -->
    <Rule Id="SA1210" Action="Warning" /> <!-- Using directives should be ordered alphabetically by namespace -->
    <Rule Id="SA1211" Action="Warning" /> <!-- Using alias directives should be ordered alphabetically by alias name -->
    <Rule Id="SA1212" Action="Warning" /> <!-- Property accessors should follow order -->
    <Rule Id="SA1213" Action="Warning" /> <!-- Event accessors should follow order -->
    <Rule Id="SA1214" Action="Warning" /> <!-- Readonly fields should appear before non-readonly fields -->
    <Rule Id="SA1216" Action="Warning" /> <!-- Using static directives should be placed at the correct location -->
    <Rule Id="SA1217" Action="Warning" /> <!-- Using static directives should be ordered alphabetically -->

    <!-- Naming Rules -->
    <Rule Id="SA1300" Action="Warning" /> <!-- Element should begin with upper-case letter -->
    <Rule Id="SA1301" Action="None" />    <!-- Element should begin with lower-case letter -->
    <Rule Id="SA1302" Action="Warning" /> <!-- Interface names should begin with I -->
    <Rule Id="SA1303" Action="Warning" /> <!-- Const field names should begin with upper-case letter -->
    <Rule Id="SA1304" Action="Warning" /> <!-- Non-private readonly fields should begin with upper-case letter -->
    <Rule Id="SA1305" Action="None" />    <!-- Field names should not use Hungarian notation -->
    <Rule Id="SA1306" Action="Warning" /> <!-- Field names should begin with lower-case letter -->
    <Rule Id="SA1307" Action="Warning" /> <!-- Accessible fields should begin with upper-case letter -->
    <Rule Id="SA1308" Action="Warning" /> <!-- Variable names should not be prefixed -->
    <Rule Id="SA1309" Action="None" />    <!-- Field names should not begin with underscore - we use _ for private fields -->
    <Rule Id="SA1310" Action="Warning" /> <!-- Field names should not contain underscore -->
    <Rule Id="SA1311" Action="Warning" /> <!-- Static readonly fields should begin with upper-case letter -->
    <Rule Id="SA1312" Action="Warning" /> <!-- Variable names should begin with lower-case letter -->
    <Rule Id="SA1313" Action="Warning" /> <!-- Parameter names should begin with lower-case letter -->
    <Rule Id="SA1314" Action="Warning" /> <!-- Type parameter names should begin with T -->

    <!-- Maintainability Rules -->
    <Rule Id="SA1400" Action="Warning" /> <!-- Access modifier should be declared -->
    <Rule Id="SA1401" Action="Warning" /> <!-- Fields should be private -->
    <Rule Id="SA1402" Action="Warning" /> <!-- File may only contain a single type -->
    <Rule Id="SA1403" Action="Warning" /> <!-- File may only contain a single namespace -->
    <Rule Id="SA1404" Action="Warning" /> <!-- Code analysis suppression should have justification -->
    <Rule Id="SA1405" Action="Warning" /> <!-- Debug.Assert should provide message text -->
    <Rule Id="SA1406" Action="Warning" /> <!-- Debug.Fail should provide message text -->
    <Rule Id="SA1407" Action="Warning" /> <!-- Arithmetic expressions should declare precedence -->
    <Rule Id="SA1408" Action="Warning" /> <!-- Conditional expressions should declare precedence -->
    <Rule Id="SA1409" Action="Warning" /> <!-- Remove unnecessary code -->
    <Rule Id="SA1410" Action="Warning" /> <!-- Remove delegate parenthesis when possible -->
    <Rule Id="SA1411" Action="Warning" /> <!-- Attribute constructor should not use unnecessary parenthesis -->
    <Rule Id="SA1412" Action="None" />    <!-- Store files as UTF-8 with byte order mark -->
    <Rule Id="SA1413" Action="Warning" /> <!-- Use trailing comma in multi-line initializers -->

    <!-- Layout Rules -->
    <Rule Id="SA1500" Action="Warning" /> <!-- Braces for multi-line statements should not share line -->
    <Rule Id="SA1501" Action="Warning" /> <!-- Statement should not be on a single line -->
    <Rule Id="SA1502" Action="Warning" /> <!-- Element should not be on a single line -->
    <Rule Id="SA1503" Action="Warning" /> <!-- Braces should not be omitted -->
    <Rule Id="SA1504" Action="Warning" /> <!-- All accessors should be single-line or multi-line -->
    <Rule Id="SA1505" Action="Warning" /> <!-- Opening braces should not be followed by blank line -->
    <Rule Id="SA1506" Action="Warning" /> <!-- Element documentation headers should not be followed by blank line -->
    <Rule Id="SA1507" Action="Warning" /> <!-- Code should not contain multiple blank lines in a row -->
    <Rule Id="SA1508" Action="Warning" /> <!-- Closing braces should not be preceded by blank line -->
    <Rule Id="SA1509" Action="Warning" /> <!-- Opening braces should not be preceded by blank line -->
    <Rule Id="SA1510" Action="Warning" /> <!-- Chained statement blocks should not be preceded by blank line -->
    <Rule Id="SA1511" Action="Warning" /> <!-- While-do footer should not be preceded by blank line -->
    <Rule Id="SA1512" Action="Warning" /> <!-- Single-line comments should not be followed by blank line -->
    <Rule Id="SA1513" Action="Warning" /> <!-- Closing brace should be followed by blank line -->
    <Rule Id="SA1514" Action="Warning" /> <!-- Element documentation header should be preceded by blank line -->
    <Rule Id="SA1515" Action="Warning" /> <!-- Single-line comment should be preceded by blank line -->
    <Rule Id="SA1516" Action="Warning" /> <!-- Elements should be separated by blank line -->
    <Rule Id="SA1517" Action="Warning" /> <!-- Code should not contain blank lines at start of file -->
    <Rule Id="SA1518" Action="Warning" /> <!-- Use line endings correctly at end of file -->
    <Rule Id="SA1519" Action="Warning" /> <!-- Braces should not be omitted from multi-line child statement -->
    <Rule Id="SA1520" Action="Warning" /> <!-- Use braces consistently -->

    <!-- Documentation Rules - Mostly disabled for now -->
    <Rule Id="SA1600" Action="None" />    <!-- Elements should be documented -->
    <Rule Id="SA1601" Action="None" />    <!-- Partial elements should be documented -->
    <Rule Id="SA1602" Action="None" />    <!-- Enumeration items should be documented -->
    <Rule Id="SA1603" Action="None" />    <!-- Documentation should contain valid XML -->
    <Rule Id="SA1604" Action="None" />    <!-- Element documentation should have summary -->
    <Rule Id="SA1605" Action="None" />    <!-- Partial element documentation should have summary -->
    <Rule Id="SA1606" Action="None" />    <!-- Element documentation should have summary text -->
    <Rule Id="SA1607" Action="None" />    <!-- Partial element documentation should have summary text -->
    <Rule Id="SA1608" Action="None" />    <!-- Element documentation should not have default summary -->
    <Rule Id="SA1609" Action="None" />    <!-- Property documentation should have value -->
    <Rule Id="SA1610" Action="None" />    <!-- Property documentation should have value text -->
    <Rule Id="SA1611" Action="None" />    <!-- Element parameters should be documented -->
    <Rule Id="SA1612" Action="None" />    <!-- Element parameter documentation should match element parameters -->
    <Rule Id="SA1613" Action="None" />    <!-- Element parameter documentation should declare parameter name -->
    <Rule Id="SA1614" Action="None" />    <!-- Element parameter documentation should have text -->
    <Rule Id="SA1615" Action="None" />    <!-- Element return value should be documented -->
    <Rule Id="SA1616" Action="None" />    <!-- Element return value documentation should have text -->
    <Rule Id="SA1617" Action="None" />    <!-- Void return value should not be documented -->
    <Rule Id="SA1618" Action="None" />    <!-- Generic type parameters should be documented -->
    <Rule Id="SA1619" Action="None" />    <!-- Generic type parameters should be documented partial class -->
    <Rule Id="SA1620" Action="None" />    <!-- Generic type parameter documentation should match type parameters -->
    <Rule Id="SA1621" Action="None" />    <!-- Generic type parameter documentation should declare parameter name -->
    <Rule Id="SA1622" Action="None" />    <!-- Generic type parameter documentation should have text -->
    <Rule Id="SA1623" Action="None" />    <!-- Property summary documentation should match accessors -->
    <Rule Id="SA1624" Action="None" />    <!-- Property summary documentation should omit accessor with restricted access -->
    <Rule Id="SA1625" Action="None" />    <!-- Element documentation should not be copied and pasted -->
    <Rule Id="SA1626" Action="None" />    <!-- Single-line comments should not use documentation style slashes -->
    <Rule Id="SA1627" Action="None" />    <!-- Documentation text should not be empty -->
    <Rule Id="SA1628" Action="None" />    <!-- Documentation text should begin with a capital letter -->
    <Rule Id="SA1629" Action="None" />    <!-- Documentation text should end with a period -->
    <Rule Id="SA1630" Action="None" />    <!-- Documentation text should contain whitespace -->
    <Rule Id="SA1631" Action="None" />    <!-- Documentation should meet character percentage -->
    <Rule Id="SA1632" Action="None" />    <!-- Documentation text should meet minimum character length -->
    <Rule Id="SA1633" Action="None" />    <!-- File should have header -->
    <Rule Id="SA1634" Action="None" />    <!-- File header should show copyright -->
    <Rule Id="SA1635" Action="None" />    <!-- File header should have copyright text -->
    <Rule Id="SA1636" Action="None" />    <!-- File header copyright text should match -->
    <Rule Id="SA1637" Action="None" />    <!-- File header should contain file name -->
    <Rule Id="SA1638" Action="None" />    <!-- File header file name documentation should match file name -->
    <Rule Id="SA1639" Action="None" />    <!-- File header should have summary -->
    <Rule Id="SA1640" Action="None" />    <!-- File header should have valid company text -->
    <Rule Id="SA1641" Action="None" />    <!-- File header company name text should match -->
    <Rule Id="SA1642" Action="None" />    <!-- Constructor summary documentation should begin with standard text -->
    <Rule Id="SA1643" Action="None" />    <!-- Destructor summary documentation should begin with standard text -->
    <Rule Id="SA1644" Action="None" />    <!-- Documentation headers should not contain blank lines -->
    <Rule Id="SA1645" Action="None" />    <!-- Included documentation file does not exist -->
    <Rule Id="SA1646" Action="None" />    <!-- Included documentation XPath does not exist -->
    <Rule Id="SA1647" Action="None" />    <!-- Include node does not contain valid file and path -->
    <Rule Id="SA1648" Action="None" />    <!-- Inheritdoc should be used with inheriting class -->
    <Rule Id="SA1649" Action="None" />    <!-- File name should match first type name -->
    <Rule Id="SA1650" Action="None" />    <!-- Element documentation should be spelled correctly -->
    <Rule Id="SA1651" Action="None" />    <!-- Do not use placeholder elements -->

  </Rules>

</RuleSet>